const web3 = require('@solana/web3.js'); const spl = require('@solana/spl-token'); async function interactWithContract() { console.log('?? INTERACTING WITH MAINNET CONTRACT - NO DEPLOYMENT COST'); const contractAddress = 'GL6kwZxTaXUXMGAvmmNZSXxANnwtPmKCHprHBM82zYXp'; const connection = new web3.Connection('https://mainnet.helius-rpc.com/?api-key=16b9324a-5b8c-47b9-9b02-6efa868958e5', 'confirmed'); console.log('Contract:', contractAddress); console.log('Network: MAINNET-BETA'); const publicKey = new web3.PublicKey(contractAddress); const accountInfo = await connection.getAccountInfo(publicKey); if (!accountInfo) { console.log('? Contract not found'); return; } console.log('? Contract found on mainnet'); console.log('Owner:', accountInfo.owner.toBase58()); console.log('Data size:', accountInfo.data.length, 'bytes'); console.log('Lamports:', accountInfo.lamports / 1e9, 'SOL'); if (accountInfo.owner.equals(spl.TOKEN_2022_PROGRAM_ID)) { console.log('?? This is a SPL Token-2022 mint!'); try { const mintInfo = spl.unpackMint(publicKey, accountInfo, spl.TOKEN_2022_PROGRAM_ID); console.log('Decimals:', mintInfo.decimals); console.log('Supply:', mintInfo.supply.toString()); console.log('Mint Authority:', mintInfo.mintAuthority?.toBase58() || 'None'); console.log('Freeze Authority:', mintInfo.freezeAuthority?.toBase58() || 'None'); } catch (e) { console.log('Could not parse as token mint'); } } console.log('?? INTERACTION OPTIONS (NO COST):'); console.log('• Query token balance'); console.log('• Check account info'); console.log('• View transaction history'); console.log('• Read contract state'); console.log('? ALL QUERIES ARE FREE - NO SOL REQUIRED'); return { address: contractAddress, network: 'mainnet-beta', cost: 'FREE', interactionType: 'READ_ONLY' }; } interactWithContract().catch(console.error);
