const web3 = require('@solana/web3.js'); const spl = require('@solana/spl-token'); async function deployMainnet() { console.log('?? OMEGA PRIME MAINNET DEPLOYMENT'); const connection = new web3.Connection('https://mainnet-rpc.helius.xyz/?api-key=aabf15b4-7db6-4ebc-ab4f-70d65db72c83', 'confirmed'); const mint = web3.Keypair.generate(); const payer = web3.Keypair.fromSecretKey(new Uint8Array([/* INSERT YOUR MAINNET KEYPAIR HERE */])); console.log('Mint:', mint.publicKey.toBase58()); console.log('Payer:', payer.publicKey.toBase58()); const balance = await connection.getBalance(payer.publicKey); console.log('Balance:', balance/1e9, 'SOL'); if (balance < 0.01 * 1e9) { console.error('? Insufficient SOL for mainnet deployment. Need at least 0.01 SOL'); return; } const rent = await spl.getMinimumBalanceForRentExemptMint(connection); console.log('Rent required:', rent/1e9, 'SOL'); const tx = new web3.Transaction().add(web3.SystemProgram.createAccount({fromPubkey: payer.publicKey, newAccountPubkey: mint.publicKey, space: spl.MINT_SIZE, lamports: rent, programId: spl.TOKEN_2022_PROGRAM_ID}), spl.createInitializeMintInstruction(mint.publicKey, 9, payer.publicKey, payer.publicKey, spl.TOKEN_2022_PROGRAM_ID)); const sig = await web3.sendAndConfirmTransaction(connection, tx, [payer, mint]); console.log('?? OMEGA PRIME DEPLOYED ON MAINNET!'); console.log('Mint:', mint.publicKey.toBase58()); console.log('Transaction:', sig); console.log('Explorer: https://explorer.solana.com/tx/' + sig); } deployMainnet().catch(console.error);
